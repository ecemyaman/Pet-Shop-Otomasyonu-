<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        axcFLxfI2sdVZrnd+ramZETvRtNQW61sjVe1F0b+KrkTVUTuVfupN+1i84wAEGbf7IuFd65AScX6He2h
        qt23XB1mjtH4lx/bp7ykvgW3R3Faf8N9R3/2+xJer/giq/4l+aMa3Ona24YX7Pd2ttuO1mltmSSZ1an7
        XWO0NbDLT328MornBHRtj7Wx9lZU6RImiM0ROiIdc+kafeUuL+2G88Ud3HMzTaqXIrrildDkmDYnY8sp
        b1FTLTOfWpaLtXXSZsla+FXxsRaViKunj7HqjjnOdVnp9HfHPbnkLzNlduhZqbJ8e2jxqsyq3YvVoyWm
        rbrTXSgt1J54HKnkihdWLMqKitV7WI5FRdF6bvhGsLbf2RcK91t76njnt/vbQ3zc6nmqKS3W1lJcYrfc
        Kmia5ZoaG4S07KSoexGL2pHKvfoqx9yIpy+aqcxAAzX/AMkjFIKzZ3jNnDmotTj2TXu1RP1TuRl5tcVY
        9ETtVdFW1t1+Sf7L006YSuf+xzHbXuZ6UuFm7F8oonZrgls28Shvisa+pdDXY2torIvJoitZUPZFM9qd
        O6Nv9Bn2OG+in1/5vme5eG85MquUVg2026rLvT4DY1jfJV5HcnW2ps80yOa9iQ01K+pVe/5K+SNWdqNR
        VLujYEclAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVd7oNqHbq+vTepaSl/LvG2zrXldobpr4
        0tFfGla/6KqdtDNUrqn/AKams+xAHcWvZul/HKs9xoWNuFTjuM41TxOVGosK4tuFR2qoVEZ92Q0kidfq
        n1+pr9kSO/j9ZDSXngVU2yDRJ8TzjIqGuRHKqq+Wlt90aqorU0+FW1Omv0+v2Sb9rF4JgAM0Fs9Ff/Wv
        LR3JHIOQVBRcetv8kXO5KKelq1v8cFrr/wB/WkqppXLAkUax9slV3q5zEV3jRy9On34Rwf1NYTLzJ9l/
        Izm9erVKuFYPc73ecU87FVGXbJ6qoo7VTr3dHOprekzl06tc2NemqDXiDWUlytzrjJZ23CB13hgZUy2t
        JY1qW00kjomSrFr3IxzmOajtNFVFT7HNWS/bvCKL1we7VcKuEH+ObI8lW3C24jWsfJTU7LLm0nmo6aN8
        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
        0dUKqVF8x51ojr3RuTRWNlu9BcEj/wDlG1r0+zkAqp3C9IPFjdq/y5VuluvuxuNkkyKj77fM0hulV2qv
        d2pJW26RzWp9mouifZDf2P3NjvSnw84+7tYHvRgl0zObL9u65lxsEVwvdBUUbqhjHRp5Y4rdE5zdHr0R
        yEu6LdTIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/
        2Q==
</value>
  </data>
</root>